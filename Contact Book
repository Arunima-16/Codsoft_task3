class Contact:
    def __init__(self, name, phone_number, email):
        self.name = name
        self.phone_number = phone_number
        self.email = email

class ContactBook:
    def __init__(self):
        self.contacts = []

    def add_contact(self, contact):
        self.contacts.append(contact)
        print("Contact added successfully.")

    def display_contacts(self):
        if not self.contacts:
            print("Contact book is empty.")
        else:
            print("Contacts:")
            for i, contact in enumerate(self.contacts, start=1):
                print(f"{i}. Name: {contact.name}")
                print("Phone: {contact.phone_number}")

    def search_contact(self, name):
        found_contacts = [contact for contact in self.contacts if contact.name.lower() == name.lower()]
        if found_contacts:
            print("Contacts found:")
            for i, contact in enumerate(found_contacts, start=1):
                print(f"{i}. Name: {contact.name}, Phone: {contact.phone_number}, Email: {contact.email}")
        else:
            print("No contacts found with that name.")

    def delete_contact(self, name):
        found_contacts = [contact for contact in self.contacts if contact.name.lower() == name.lower()]
        if found_contacts:
            print("Contacts found:")
            for i, contact in enumerate(found_contacts, start=1):
                print(f"{i}. Name: {contact.name}, Phone: {contact.phone_number}, Email: {contact.email}")
            choice = input("Enter the index number of the contact to delete or 'c' to cancel: ")
            if choice.lower() == 'c':
                print("Deletion canceled.")
                return
            try:
                index = int(choice) - 1
                del self.contacts[self.contacts.index(found_contacts[index])]
                print("Contact deleted successfully.")
            except (ValueError, IndexError):
                print("Invalid input. Deletion canceled.")
        else:
            print("No contacts found with that name.")

    def update_contact(self, name):
        found_contacts = [contact for contact in self.contacts if contact.name.lower() == name.lower()]
        if found_contacts:
            print("Contacts found:")
            for i, contact in enumerate(found_contacts, start=1):
                print(f"{i}. Name: {contact.name}, Phone: {contact.phone_number}, Email: {contact.email}")
            choice = input("Enter the index number of the contact to update or 'c' to cancel: ")
            if choice.lower() == 'c':
                print("Update canceled.")
                return
            try:
                index = int(choice) - 1
                contact = found_contacts[index]
                new_name = input("Enter new name (press Enter to keep current): ").strip()
                new_phone = input("Enter new phone number (press Enter to keep current): ").strip()
                new_email = input("Enter new email (press Enter to keep current): ").strip()

                if new_name:
                    contact.name = new_name
                if new_phone:
                    contact.phone_number = new_phone
                if new_email:
                    contact.email = new_email

                print("Contact updated successfully.")
            except (ValueError, IndexError):
                print("Invalid input. Update canceled.")
        else:
            print("No contacts found with that name.")

def main():
    contact_book = ContactBook()
    while True:
        print("\nContact Book Menu:")
        print("1. Add Contact")
        print("2. Display Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            name = input("Enter name: ").strip()
            phone_number = input("Enter phone number: ").strip()
            email = input("Enter email: ").strip()
            contact = Contact(name, phone_number, email)
            contact_book.add_contact(contact)
        elif choice == '2':
            contact_book.display_contacts()
        elif choice == '3':
            name = input("Enter name to search: ").strip()
            contact_book.search_contact(name)
        elif choice == '4':
            name = input("Enter name to update: ").strip()
            contact_book.update_contact(name)
        elif choice == '5':
            name = input("Enter name to delete: ").strip()
            contact_book.delete_contact(name)
        elif choice == '6':
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please enter a number between 1 and 6.")

if __name__ == "__main__":
    main()
